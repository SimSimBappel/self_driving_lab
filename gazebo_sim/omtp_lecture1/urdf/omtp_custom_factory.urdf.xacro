<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from omtp_factory.xacro             | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="omtp_factory" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- ==================================================== -->
  <!-- INITIAL SETUP OF WORLD LINK AND WORLD_INTERFACE LINK -->
  <!-- ==================================================== -->
  <!-- world -->
  <link name="world"/>
  <!-- world_interface. Makes it convenient to move the whole environment according to the world origin -->
  <link name="world_interface"/>
  <!-- world<->world_interface joint -->
  <joint name="world_interface_to_world" type="fixed">
    <parent link="world"/>
    <child link="world_interface"/>
  </joint>
  <!-- <xacro:include filename="$(find aau_lab_ros_models)/urdf/fib14/fib14.urdf.xacro"/>
  <xacro:fib14_urdf fib14_parent="world_interface"/> -->


  <!-- <xacro:arg name="arm_id_1" default="panda_1" />
  <xacro:arg name="arm_id_2" default="panda_2" />

  <xacro:include filename="$(find franka_description)/robots/panda_arm.xacro"/>
  <xacro:include filename="$(find franka_description)/robots/hand.xacro"/>
  
  <xacro:panda_arm arm_id="$(arg arm_id_1)" connected_to="${robot1_pedestal_link}"  xyz="${0 -0.5 1}" safety_distance="0.03"/>
  <xacro:hand ns="$(arg arm_id_1)" rpy="0 0 ${-pi/4}" connected_to="$(arg arm_id_1)_link8" safety_distance="0.03"/> -->
  
  <xacro:arg name="arm_id_1" default="panda1"/>
  <xacro:arg name="use_cylinder_collision_model" default="true"/>
  <xacro:arg name="use_gazebo_sim" default="true"/>
  <xacro:arg name="parent" default="robot1_pedestal_link"/>

  <!-- Load panda arm and hand -->
  <xacro:include filename="$(find franka_description)/robots/panda_arm.xacro" />
  <xacro:include filename="$(find franka_description)/robots/hand.xacro"/>

  <!-- Load gazebo control -->
  
  <xacro:include filename="$(find franka_description)/robots/panda.gazebo.xacro"/>
  <xacro:include filename="$(find franka_description)/robots/panda.control.xacro"/>
  

  <!-- Panda 1 -->
  <xacro:panda_arm xyz="0.05 0 0.95" rpy="0 0 0" connected_to="$(arg parent)" arm_id="$(arg arm_id_1)" safety_distance="0.03" use_cylinder_collision_model="$(arg use_cylinder_collision_model)"/>
  <xacro:hand ns="$(arg arm_id_1)" rpy="0 0 ${-pi/4}" connected_to="$(arg arm_id_1)_link8" safety_distance="0.03" use_cylinder_collision_model="$(arg use_cylinder_collision_model)"/>

  <xacro:arm_gazebo arm_id="$(arg arm_id_1)"/>
  <xacro:arm_control arm_id="$(arg arm_id_1)"/>


  <xacro:include filename="$(find external_ros_models)/urdf/robot_pedestal/robot_pedestal.urdf.xacro"/>
  <xacro:robot_pedestal_urdf pedestal_prefix="robot1_" pedestal_parent="world_interface" pedestal_height="0.95">
    <origin xyz="-0.6 1.5 0.0" rpy="0 0 0"/>
  </xacro:robot_pedestal_urdf>

  <xacro:include filename="$(find aau_lab_ros_models)/urdf/festo_straight_module/festo_straight_module.urdf.xacro"/>
	<xacro:festo_module_urdf module_prefix="module1_" festo_module_parent="world_interface">
		<origin xyz="0.0 1.5 0.0" rpy="0 0 0.0"/>
	</xacro:festo_module_urdf>

  
  <xacro:arg      name="use_conveyor"      default="true"/>

  <xacro:if value="$(arg use_conveyor)">
		<xacro:include filename="$(find omtp_lecture5)/urdf/conveyor.urdf.xacro"/>
		<xacro:conveyor name="conveyor"  parent="world_interface">
			<origin xyz="0.0 1.5 1.0" rpy="0 0 0" />
		</xacro:conveyor>  
	</xacro:if>

  



  <!-- franka robot 2 -->
  <!-- <xacro:arg name="arm_id_2" default="panda2"/>
  <xacro:arg name="use_cylinder_collision_model" default="true"/>
  <xacro:arg name="use_gazebo_sim" default="true"/>
  <xacro:arg name="parent2" default="robot2_pedestal_link"/> -->

  <!-- Load panda arm and hand -->
  <!-- <xacro:include filename="$(find franka_description)/robots/panda_arm.xacro" />
  <xacro:include filename="$(find franka_description)/robots/hand.xacro"/> -->

  <!-- Load gazebo control -->
  <!-- <xacro:if value="$(arg use_gazebo_sim)">
    <xacro:include filename="$(find franka_description)/robots/panda.gazebo.xacro"/>
    <xacro:include filename="$(find franka_description)/robots/panda.control.xacro"/>
  </xacro:if> -->


  <!-- <xacro:panda_arm xyz="0.05 0 0.95" rpy="0 0 0" connected_to="$(arg parent2)" arm_id="$(arg arm_id_2)" safety_distance="0.03" use_cylinder_collision_model="$(arg use_cylinder_collision_model)"/>
  <xacro:hand ns="$(arg arm_id_2)" rpy="0 0 ${-pi/4}" connected_to="$(arg arm_id_2)_link8" safety_distance="0.03" use_cylinder_collision_model="$(arg use_cylinder_collision_model)"/>

  <xacro:arm_gazebo arm_id="$(arg arm_id_2)"/>
  <xacro:arm_control arm_id="$(arg arm_id_2)"/>


  <xacro:include filename="$(find external_ros_models)/urdf/robot_pedestal/robot_pedestal.urdf.xacro"/>
  <xacro:robot_pedestal_urdf pedestal_prefix="robot2_" pedestal_parent="world_interface" pedestal_height="0.95">
    <origin xyz="0.8 3.0 0.0" rpy="0 0 0"/>
  </xacro:robot_pedestal_urdf>



  <xacro:include filename="$(find aau_lab_ros_models)/urdf/festo_straight_module/festo_straight_module.urdf.xacro"/>
  <xacro:festo_module_urdf module_prefix="module_1" festo_module_parent="world_interface">
    <origin xyz="1.5 1.8 0.0" rpy="0 0 0"/>
  </xacro:festo_module_urdf>
  <xacro:festo_module_urdf module_prefix="module_2" festo_module_parent="world_interface">
    <origin xyz="1.5 3.0 0.0" rpy="0 0 0"/>
  </xacro:festo_module_urdf> -->

  <!-- robot module -->
  <!-- <xacro:include filename="$(find aau_lab_ros_models)/urdf/festo_robot_module/festo_robot_module.urdf.xacro"/>
  <xacro:festo_module_urdf module_prefix="module_robot_1" festo_module_parent="world_interface">
    <origin xyz="1.5 0.6 0.0" rpy="0 0 0"/>
  </xacro:festo_module_urdf>

  <xacro:include filename="$(find aau_lab_ros_models)/urdf/festo_bypass_module/festo_bypass_module.urdf.xacro"/>
  <xacro:festo_module_urdf module_prefix="module_bypass_1" festo_module_parent="world_interface">
    <origin xyz="1.5 -0.6 0.0" rpy="0 0 0"/>
  </xacro:festo_module_urdf>

  <xacro:include filename="$(find aau_lab_ros_models)/urdf/festo_t_module/festo_t_module.urdf.xacro"/>
  <xacro:festo_module_urdf module_prefix="module_t_1" festo_module_parent="world_interface">
    <origin xyz="1.5 4.2 0.0" rpy="0 0 0"/>
  </xacro:festo_module_urdf> -->

  <!-- <xacro:include filename="$(find aau_lab_ros_models)/urdf/eu_pallet/eu_pallet.urdf.xacro"/>
  <xacro:eu_pallet_urdf eu_pallet_prefix="eu_pallet_1" eu_pallet_parent="world_interface">
    <origin xyz="3.5 4.2 0.0" rpy="0 0 0"/>
  </xacro:eu_pallet_urdf> -->
  
  <!-- left arm with gripper -->
  <!-- <xacro:panda_arm arm_id="$(arg arm_id_2)" connected_to="${parent}"  xyz="0 0.5 1" safety_distance="0.03"/>
  <xacro:hand ns="$(arg arm_id_2)" rpy="0 0 ${-pi/4}" connected_to="$(arg arm_id_2)_link8" safety_distance="0.03"/> -->

  
  <!-- <xacro:include filename="$(find external_ros_models)/urdf/robot_pedestal/robot_pedestal.urdf.xacro"/>
  <xacro:robot_pedestal_urdf pedestal_prefix="robot1_" pedestal_parent="world_interface" pedestal_height="0.95">
    <origin xyz="0.5 1.8 0.0" rpy="0 0 0"/>
  </xacro:robot_pedestal_urdf> -->

   

  <!-- <joint name="panda2_virtual_joint" type="fixed">
    <parent link="robot1_pedestal_link"/>
    <child link="${arm_id_2}_link0"/>
    <origin rpy="0 0 0" xyz="0.05 0 0.95"/>
    <dynamics damping="1.0"/>
  </joint> -->

  <!-- <joint name="robot1_pedestal_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.5 1.8 0.0"/>
    <parent link="world_interface"/>
    <child link="robot1_pedestal_link"/>
  </joint> -->
  <!-- <link name="robot1_pedestal_link">
    <visual>
      <origin xyz="0 0 0.475"/>
      <geometry>
        <box size="0.3 0.3 0.95"/>
      </geometry>
      <material name="pedestal_color">
        <color rgba="0 0.1568627450980392 0.5254901960784314 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0.475"/>
      <geometry>
        <box size="0.3 0.3 0.95"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="500"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link> -->

</robot>
